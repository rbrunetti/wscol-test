 _______  _____  ______   _____ 
    |    |     | |     \ |     |
    |    |_____| |_____/ |_____|

 	• Find and implement possible functions for DataObject variables: cardinality()
 		vuoto blocca se viene usato
	• Make some junit tests based on assertions in 'queries.xpt' file
	• Make a clean project: new project importing the grammar jar and throw methods outside Main.java! (-> how to organize it smartly?)
	• (Partially done) Make runtime errors and static errors more uniform: similar error message, similar informations printed (-> add a function?)
	• 
	• 
 ______   _____  _     _ ______  _______ _______
 |     \ |     | |     | |_____]    |    |______
 |_____/ |_____| |_____| |_____]    |    ______|
 
 
	• Implicit 'true' even for functions (ex. $a.startsWith("..")) (lots of changing in rules...) => necessary?
		exists($p in $persons, $p.get("nome").startsWith($p.get("cognome").substring(0,1)))
	• Attribute could not be defined on variables: $a[1] or $a[title="titolo"] => useful? ------> get() con sia numeri che stringhe per le chiavi
		* il problema è che le chiavi nel dataobject sono tutte unite (/inven/book contiene 18 elementi) ---> vai a vedere il funzionamento di xpath con xml
	• 
	• Thesis text?
	• DataObject/JSON/whatever input type?
	• 
 _____ _______  _____         _______ _______ _______ __   _ _______ _______ ______ 
   |   |  |  | |_____] |      |______ |  |  | |______ | \  |    |    |______ |     \
 __|__ |  |  | |       |_____ |______ |  |  | |______ |  \_|    |    |______ |_____/
 
 	• Base rules of the grammar (...)
 	• Make a TODO list :)
 	• Rules for make assertions with AND, OR and NOT (with the corresponding priority: NOT > AND > OR)
 	• Rules for quantified assertions 'forall', 'exists' and 'numOf'
 	• Runtime errors (ex. quantified assertion over a single value variable and not on a set of value) throws exception with a corresponding message
 	• Implementation of rules for 'max', 'min', 'avg', 'sum' and 'product'
 		• BUT with the correction of the rule Variable ('min', 'max', etc are now language keyword, so I could not declare a variable '$min' without correcting the Variable rule)
 		• BUT float numbers could be different for a minimum fraction, maybe we can use a limited number of decimal digit
 	• Make the boolean value in AssertionForm implicit (ex. exists(...) = true -> exists(...))
 	• Better syntax errors messages: what and why is wrong; also for runtime errors with values printing
	• Values can contain variable referring to other object
 	• Function 'contains' for DataObject: search for an Object (of any type) deeply inside them
	• Added the use of variables inside all the functions, even inside the attribute of a Step
		• BUT without the possibility to use functions: no "/step[$a.length()]", only "/step[$a]" or "/step[property==$a]"
		• values of the passed variable must be of the correct type (ex. 1 is a Double, "1" a String...no parsing from one to another)
 	• 
	•  
